diff -Naur qemu-2.10.0-rc3.cosim-patched/hw/misc/accelerator_pcie.c qemu-2.10.0-rc3/hw/misc/accelerator_pcie.c
--- qemu-2.10.0-rc3.cosim-patched/hw/misc/accelerator_pcie.c	2020-07-17 22:49:00.644573212 +0800
+++ qemu-2.10.0-rc3/hw/misc/accelerator_pcie.c	2020-07-17 22:49:37.974743702 +0800
@@ -64,6 +64,7 @@
 #define MMIO_WRITE_BAR(_num)                                                   \
     static void mmio_write_bar##_num(void *opaque, hwaddr addr, uint64_t val,  \
                                      unsigned size) {                          \
+        printf("accl: mmio_wr: @0x%016lx =0x%016lx\n", addr, val);             \
         ACCPCIeState *s = opaque;                                              \
         ACCData acc_req;                                                       \
         /*memset(&acc_req, 0, sizeof(ACCData));*/                              \
@@ -156,6 +157,7 @@
 		}																	   \
 		ACCELERATOR_DPRINTF("BAR[%d] RD %016lx:   %lx\n", _num, addr, data);   \
         zframe_destroy(&frame);                                                \
+        printf("accl: mmio_rd: @0x%016lx =0x%016lx\n", addr, data);            \
         return data;                                                           \
     }
 
diff -Naur qemu-2.10.0-rc3.cosim-patched/hw/virtio/virtio-pci.c qemu-2.10.0-rc3/hw/virtio/virtio-pci.c
--- qemu-2.10.0-rc3.cosim-patched/hw/virtio/virtio-pci.c	2020-07-17 22:49:00.652558269 +0800
+++ qemu-2.10.0-rc3/hw/virtio/virtio-pci.c	2020-07-17 22:49:19.044736633 +0800
@@ -353,6 +353,8 @@
     VirtIOPCIProxy *proxy = opaque;
     VirtIODevice *vdev = virtio_bus_get_device(&proxy->bus);
     hwaddr pa;
+    
+    printf("virt:  pio_wr: @0x%08x =0x%08x\n", addr, val);
 
     switch (addr) {
     case VIRTIO_PCI_GUEST_FEATURES:
@@ -466,6 +468,7 @@
         break;
     }
 
+    printf("virt:  pio_rd: @0x%08x =0x%08x\n", addr, ret);
     return ret;
 }
 
@@ -1254,6 +1257,8 @@
         val = 0;
     }
 
+    printf("virt: mmio_rd: @0x%016lx =0x%08x\n", addr, val);
+
     return val;
 }
 
@@ -1263,6 +1268,8 @@
     VirtIOPCIProxy *proxy = opaque;
     VirtIODevice *vdev = virtio_bus_get_device(&proxy->bus);
 
+    printf("virt: mmio_wr: @0x%016lx =0x%016lx\n", addr, val);
+
     switch (addr) {
     case VIRTIO_PCI_COMMON_DFSELECT:
         proxy->dfselect = val;
